dt2<-filter(mtcars,cyl="4|cyl=="8")
dt2<-filter(mtcars,cyl="4"|cyl=="8")
dt2<-mtcars[mtcars$cyl="4"|mtcars$cyl="8",]
dt2<-mtcars[mtcars$cyl=="4"|mtcars$cyl=="8",]
head(dt2)
q1<-lm(dt2$mpg~dt2$cyl+dt2$wt)
summary(q1)
lm(mpg ~ factor(cyl) + wt, data = mtcars)
q<-lm(mpg ~ factor(cyl), data = mtcars)
q2<-lm(mpg ~ factor(cyl)+wt, data = mtcars)
anova
anova(q,q2)
summary(q)
summary(q2)
q3<-lm(mpg ~ cyl+wt, data = mtcars)
anova(q2,q3)
summary(q3)
clear
clean
q3<-lm(mpg ~ cyl+wt, data = mtcars)
summary(q3)
q2<-lm(mpg ~ factor(cyl)+wt, data = mtcars)
anova(q2,q3)
q3<-lm(mpg ~ factor(cyl)+wt+interaction(cyl,wt), data = mtcars)
anova(q2,q3)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
q4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
anova(q2,q4)
summary(q4)
summary(q2)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
q5<-lm(y~x)
hatvalues(q5)
summary(q5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
q6<-lm(y~x)
summary(q6)
dfbetas(q6)
q1<-lm(mpg~factor(cyl)+wt,data=mtcars)
summary(q1)
hatvalues(q5)
summary(q5)
dfbetas(q5)
dt<-mtcars[cyl=="4"|cyl=="8",]
dt<-mtcars[mtcars$cyl=="4"|mtcars$cyl=="8",]
q1<-lm(mpg~factor(cyl)+wt,data=dt)
summary(q1)
?vif
??vif
?vif()
6/9*40
c(1, 1, 1, 2, 2, rep(3, 5)
)
ggplot(mtcars,aes(x=cyl,y=mpg))
library(easyGgplot2)
ggplot(mtcars,aes(x=cyl,y=mpg))
ggplot(mtcars,aes(x=cyl,y=mpg))+geom_point()
p1<-ggplot(mtcars,aes(x=cyl,y=mpg))+geom_point()
ggplot2.multiplot(p1,p1,cols = 2)
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,1,1,2,2))))
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,1,1,2,2)),nrow=1))
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,2)),nrow=1))
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,2)),1))
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,2))))
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,2,2,2))))
ggplot2.multiplot(p1,p1,cols = 2,layout(matrix(c(1,2,2,2)),2))
<pre name="code" class="plain">multiplot(p1, p1, cols=2)
<pre name="code" class="plain">multiplot(p1, p1,p1,p1, cols=2)
multiplot(p1, p1,p1,p1, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
<pre name="code" class="plain">multiplot(p1, p1,p1,p1, cols=2)
multiplot(p1, p1,p1,p1, cols=2)
layout <- matrix(c(1, 1, 1, 2, 2, rep(3, 5)), nrow = 2, byrow = TRUE)
multiplot(plotlist = list(p1, p1, p1), layout = layout)
multiplot(p1, p1, cols=2)
layout <- matrix(c(1, 1, 1, 2, 2), nrow = 1, byrow = TRUE)
multiplot(plotlist = list(p1, p1), layout = layout)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x, w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-1)
99000/0.01
9900000-99000
99/(99+99000)
99/(99+9801000)
9801000/9900000
99000/0.001
99/(99+999)
install.packages("devtool")
install.packages("devtools")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
require(devtools)
install_github('rCharts', 'ramnathv')
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
airquality
library(rChart)
library(rCharts)
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
dTable(airquality, sPaginationType = "full_numbers")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
n<-lm(y~x)
summary(n)
lm(mtcars$mpg~mtcars$wgt)
lm(mtcars$mpg~mtcars$wt)
f<-lm(mtcars$mpg~mtcars$wt)
predict(f,data.frame(x=mean(mtcars$wt)),interval="confidence")
mtcars$wt
mean(mtcars$wt)
predict(f,data.frame(x=3.21725),interval="confidence")
predict(f,3.21725,interval="confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
?mtcars
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=3, interval="confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=3), interval="confidence")
predict(fit,data.frame(x=3), interval="prediction")
predict(fit,data.frame(x=2), interval="confidence")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ I(x/2))
predict(fit,data.frame(x=3), interval="confidence")
summary(fit)
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
library(slidify)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
install.packages("caret")
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
?preProcess()
head(training)
training[,1]
training[1,]
names(training)%in%"IL"
names(training)
names(training) %in% "IL"
grep("IL",names(training))
training[grep("IL",names(training)),]
training[grepl("IL",names(training)),]
library(dplyr)
select(training,1:3,contains("IL"))
select(training,1:3,contains("IL_"))
a<-select(training,1:3,contains("IL_"))
a[,4:15]
b<-a[,4:15]
preProcess(b,numComp=0.8)
c<-preProcess(b,numComp=0.8)
print(c)
c<-ir.pca<-prcomp(b,center=TRUE,scale.=TRUE)
print(c)
plot(c)
c<-preProcess(b,method='pca',thresh=0.8,outcome=training$diagnosis)
c$rotation
lm(mpg~wt+factor(cyl),data=mtcars)
fit<-lm(mpg~wt+factor(cyl),data=mtcars)
summary(fit)
fit<-lm(mpg~.,data=mtcars)
summary(fit)
fit<-lm(mpg~wt+factor(cyl),data=mtcars)
fit2<-lm(mpg~factor(cyl),data=mtcars)
anova(fit,fit2)
summary(fit)
summary(fit2)
fit3<-lm(mpg~factor(cyl)*wt,data=mtcars)
summary(fit3)
anova(fit,fit3)
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5<-lm(y~x)
hatvalues(fit5)
infl<-influence.measure(fit5)
infl<-influence.measures(fit5)
hatvalues(infl)
summary(infl)
which(apply(infl$is.inf, 1, any))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6<-lm(y~x)
infl6<-influence.measures(fit6)
summary(infl6)
dfbeta(fit6)
dfbetas(fit6)
?datasets
library(help = "datasets")
?Ability and Intelligence Tests
?ability.cov
summary(ability.cov)
ability.cov
summary(woman)
summary(women)
women
summary(EuStockMarkets)
?EuStockMarkets
head(EuStockMarkets)
rowms(EuStockMarkets)
nrows(EuStockMarkets)
nrow(EuStockMarkets)
?InsectSprays
head(InsectSprays)
nrow(InsectSprays)
?UCBAdmissions
apply(UCBAdmissions, c(1, 2), sum)
mosaicplot(apply(UCBAdmissions, c(1, 2), sum),
main = "Student admissions at UC Berkeley")
UCBAdmissions
UKLungDeaths
BJsales
head(EuStockMarkets)
install.packages("shiny")
library(shiny)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='kelseyning', token='4101B61788D3DE215D121607C21FC70E', secret='hheDJY4v5sEDfGMglNquHmYhhao/Xg4KoDp27e4j')
setwd("~/r/")
setwd("~/r/ddp")
setwd("~/r/ddp/sample")
source('~/r/ddp/sample/Untitled.R')
source('~/r/ddp/sample/Untitled.R')
runApp()
runApp()
library(ggplot2)
}
library(rsconnect)
deployApp()
library(shiny)
library(rsconnect)
install.packages("rsconnect")
devtools::install_github('rstudio/rsconnect')
library(rsconnect)
deployApp()
head(EuStockMarkets)
?EuStockMarkets
d<-as.Date(1991,1992)
d<- as.Date("1/1/1991", "12/31/1998", format="%m/%d/%Y")
head(d)
d
d<- as.Date("1/1/1991", "12/31/1998")
d
d=seq(as.Date("1991/1/1"),as.Date("1998/12/31"),"1 day")
head d
head(d)
nrow(d)
ncol(d)
dt<-EuStockMarkets
dt$Date<-d
head(dt)
dt<-EuStockMarkets
head(dt)
?seq
d=seq(ISOdate(1991,1,1),ISOdate(1998,12,31,),by="day")
head(d)
d=seq(as.Date("1991/1/1"),as.Date("1998/12/31"),"1 day")
dt$Date<-d
dt$Date<-as.Date(d,"%y-%m-%d")
head(dt)
dt<-EuStockMarkets
da<-c(1,2,3,5)
da
ddt<-data.frame(d,dt)
dates<-as.Date("1991-01-01"):as.Date("1998-12-31")
head(dates)
d=seq(as.Date("1991/1/1"),as.Date("1998/12/31"),"1 day")
startdate <- as.Date(c('2010-11-1','2008-3-25','2007-3-14))
)
q
startdate <- as.Date(c('2010-11-1','2008-3-25','2007-3-14'))
startdate
library(dplyr)
mutate(dt,Date=seq(as.Date("1991/1/1"),as.Date("1998/12/31"),"1 day"))
dt$Date<-seq(as.Date("1991/1/1"),as.Date("1998/12/31"),"1 day")
dd<-cbind(dt,dt)
head(dd)
dt<-EuStockMarkets
dd<-cbind(dt,dt)
head(dd)
dd<-cbind(d,dt)
d=data.frame(seq(as.Date("1991/1/1"),as.Date("1998/12/31"),"1 day"))
head(d)
names(d)<-"Date"
head(d)
dd<-cbind(d,dt)
head(dd)
dt$Date<-d
dt<-EuStockMarkets
dt$Date<-as.Date("1991-01-01")
dt<-EuStockMarkets
ddt<-replace(dt,"Date",as.Date("1991-01-01"))
attach(d)
attach(dt)
dt<-EuStockMarkets
attach(dt)
dt<-data.frame(EuStockMarkets)
head(dt)
head(d)
ddd<-cbind(d,dt)
head(ddd)
ncold
ncol(d)
d
nrow(d)
nrow(dt)
d$days<-ifelse(weekdays(as.Date(d$Date),abbreviate = FALSE)=="Sunday"|weekdays(as.Date(d$Date),abbreviate = FALSE)=="Saturday","weekend","weekday")
head(d)
wd<-d[d$days=="weekday",]
head(wd)
nrow(wd)
nrow(dt)
1860/8
1998/4
1996/4
1992/4
1862/8
?AirPassengers
head(AirPassengers)
head(airquality )
head(airquality)
tail(airquality)
summary(airquality)
str(airquality)
c(5:9)
?airquality
library(ggplot2)
ggplot(airquality,aes())
?reactive
EuStockMarkets
?EuStockMarkets
list.files)
list.files())
list.files()
setwd("../")
list.files()
setwd("project")
list.files()
runApp()
list.files()
runApp()
runApp()
dataset <- EuStockMarkets
nrow(dataset)
names(dataset)
dataset <- data.frame(EuStockMarkets)
names(dataset)
runApp()
ggplot(dataset(), aes_string(x=input$x)) + geom_histogram(binwidth=500,colour="black", fill="white")
ggplot(dataset, aes_string(x=input$x)) + geom_histogram(binwidth=500,colour="black", fill="white")
ggplot(dataset, aes_string(x=DAX)) + geom_histogram(binwidth=500,colour="black", fill="white")
dataset$DAX
ggplot(dataset, aes(x=DAX)) + geom_histogram(binwidth=500,colour="black", fill="white")
ggplot(dataset, aes(x=DAX)) + geom_histogram(binwidth=50,colour="black", fill="white")
ggplot(dataset, aes(x=DAX)) + geom_histogram(binwidth=1,colour="black", fill="white")
ggplot(dataset, aes(x=DAX)) + geom_histogram(binwidth=50,colour="black", fill="white")
runApp()
ggplot(dataset, aes(x=DAX)) + geom_histogram(binwidth=500,colour="black", fill="white")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(dataset, aes(x=DAX)) + geom_point()
plot(dataset)
plot(dataset$DAX)
ggplot(dataset, aes(y=DAX,x=seq(1,length(dataset$DAX))) + geom_point()
ggplot(dataset, aes(y=DAX,x=seq(1,length(dataset$DAX)))) + geom_point()
runApp()
runApp()
runApp()
ggplot(dataset, aes(y=DAX,x=seq(1,length(DAX)))) + geom_point()
runApp()
runApp()
runApp()
runApp()
ggplot(dataset, aes(y=DAX,x=seq(1,length(DAX)))) + geom_point()
ind<-"DAX"
ind
ggplot(dataset, aes(y=ind,x=seq(1,length(DAX)))) + geom_point()
ind<-DAX
ind==DAX
runApp()
runApp()
runApp()
runApp()
runApp()
dataset
dataset$days<-seq(1,nrow(dataset))
head(dataset)
runApp()
runApp()
runApp()
runApp()
runApp()
dt <- data.frame(EuStockMarkets)
dt$Days<-seq(1,length(dt))
head(dt)
length(dt)
dt <- data.frame(EuStockMarkets)
dt$Days<-seq(1,nrow(dt))
head(dt)
runApp()
runApp()
runApp()
tail(dt)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
seq(1,3)
length(dt)
dt <- data.frame(EuStockMarkets)
length(dt)
length(dt$DAX)
seq(1,nrow(dt))
runApp()
?mtcars
plot(mtcars)
?mtcars
runApp()
runApp()
runApp()
dataset <- data.frame(mtcars)
head(dataset)
runApp()
runApp()
runApp()
runApp()
ggplot(dataset, aes(y=mpg,x=cyl)) + geom_point()
runApp()
runApp()
runApp()
runApp()
?mtcars
head(mtcars)
runApp()
runApp()
runApp()
ggplot(dataset, aes_string(x=cyl, y=mpg)) + geom_point()
ggplot(mtcars, aes_string(x=cyl, y=mpg)) + geom_point()
ggplot(mtcars, aes_string(x=disp, y=mpg)) + geom_point()
ggplot(mtcars, aes(x=disp, y=mpg)) + geom_point()
ggplot(mtcars, aes(x=disp, y=mpg)) + geom_point()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
airquality
